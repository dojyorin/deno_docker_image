{
    "name": "test",
    "on": {
        "push": {
            "branches-ignore": [
                "master"
            ],
            "paths-ignore": [
                ".git*",
                "**.md"
            ]
        },
        "pull_request": {
            "branches": [
                "master"
            ],
            "paths-ignore": [
                ".git*",
                "**.md"
            ]
        }
    },
    "jobs": {
        "test": {
            "name": "test: ${{matrix.file}}",
            "runs-on": "ubuntu-latest",
            "strategy": {
                "fail-fast": true,
                "matrix": {
                    "file": [
                        "alpine",
                        "distroless"
                    ]
                }
            },
            "env": {
                "tag_f": "${{github.repository_owner}}/deno:${{matrix.file}}-${{github.ref_name}}",
                "tag_d": "${{github.repository_owner}}/deno:${{matrix.file}}",
                "tag_v": "${{github.repository_owner}}/deno:${{github.ref_name}}",
                "tag_l": "${{github.repository_owner}}/deno:latest"
            },
            "steps": [{
                "name": "clone repository",
                "uses": "actions/checkout@v3"
            }, {
                "name": "install docker-qemu",
                "uses": "docker/setup-qemu-action@v3"
            }, {
                "name": "install docker-buildx",
                "uses": "docker/setup-buildx-action@v3"
            }, {
                "name": "build image",
                "uses": "docker/build-push-action@v5",
                "with": {
                    "no-cache": true,
                    "tags": "${{env.tag_f}},${{env.tag_d}}${{matrix.file == 'distroless' && format(',{0},{1}', env.tag_v, env.tag_l) || '' }}",
                    "platforms": "linux/amd64",
                    "context": "./src",
                    "file": "${{matrix.file}}.dockerfile"
                }
            }, {
                "name": "run test",
                "run": "docker run -it --init --rm ${{github.repository_owner}}/deno:latest eval -p 'new Date()'"
            }]
        }
    }
}